name: CI Pipeline

on:
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - '**.md'
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - '**.md'
      - 'makefile'

jobs:


  install_dev:
    name: Install Dev Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Clone Code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4

      - name: Mount Cache
        uses: actions/cache@v3
        with:
          key: cache-${{ github.run_id }}
          path: |
            build
            vendor

      - name: Install Dependencies
        run: make dev -B

  # ------------------------------------------------------------------------------------------------------------------------

  syntax_checks:
    name: Syntax Checks
    needs: install_dev
    runs-on: ubuntu-latest
    steps:
      - name: Clone Code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4

      - name: PHP Syntax Checks
        run: find . -name '*.php' -not -path "./src/vendor/*" -not -path "./tests/*" | xargs -n 1 -P4 php -l

  unit_tests:
    name: Unit Tests
    needs: install_dev
    runs-on: ubuntu-latest
    steps:

      - name: Clone Code
        uses: actions/checkout@v3

      - name: Mount Cache
        uses: actions/cache@v3
        with:
          key: cache-${{ github.run_id }}
          path: |
            build
            vendor

      - name: Run PHPUnit
        run: make phpunit -B

  phpstan:
    name: PHPStan Analyzer
    needs: install_dev
    runs-on: ubuntu-latest
    steps:

      - name: Clone Code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4

      - name: Mount Cache
        uses: actions/cache@v3
        with:
          key: cache-${{ github.run_id }}
          path: |
            build
            vendor

      - name: Run PHPStan
        run: make stan -B

  phpcsfixer:
    name: PHP CS Fixer
    needs: install_dev
    runs-on: ubuntu-latest
    steps:

      - name: Clone Code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4

      - name: Mount Cache
        uses: actions/cache@v3
        with:
          key: cache-${{ github.run_id }}
          path: |
            build
            vendor

      - name: Run PHP CS Fixer
        run: make csfix -B

  # ------------------------------------------------------------------------------------------------------------------------

  svrunit:
    name: SVRUnit Tests
    needs: install_dev
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4

      - name: Build PHAR
        run: make build -B

      - name: Install SVRUnit
        run: make dev -B

      - name: Start SVRUnit
        run: |
          make svrunit -B

      - name: Store SVRUnit Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: svrunit_report
          retention-days: 3
          path: |
            .reports

      - name: Build JUnit Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: SVRUnit Tests
          path: .reports/report.xml
          reporter: jest-junit

  # ------------------------------------------------------------------------------------------------------------------------

  build:
    name: Build Binaries
    needs: [ syntax_checks, unit_tests, phpstan, phpcsfixer, svrunit ]
    runs-on: ubuntu-latest
    steps:
      - name: Clone Code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          ini-values: phar.readonly=OFF

      - name: Mount Cache
        uses: actions/cache@v3
        with:
          key: cache-build-${{ github.run_id }}
          path: |
            build
            vendor

      - name: Build Binaries
        run: make build -B

  # ------------------------------------------------------------------------------------------------------------------------

  packagist:
    name: Update Packagist
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:

      - uses: actions/checkout@v3

      - name: Invoke Packagist Webhook
        run: |
          curl -XPOST -H'content-type:application/json' 'https://packagist.org/api/update-package?username=${{ secrets.PACKAGIST_USER }}&apiToken=${{ secrets.PACKAGIST_TOKEN }}' -d'{"repository":{"url":"https://packagist.org/packages/boxblinkracer/phpunuhi"}}'
